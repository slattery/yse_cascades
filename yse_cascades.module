<?php

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Template\Attribute;

// OMG https://environment-yale-edu.lndo.site/admin/config/search/path/settings
// TODO decide if last segment can stay in step_parent_path
// TODO see if I can add menu_item_extras field in node field.

/**
 * Implements hook_help().
 */
function yse_cascades_help($route_name, RouteMatchInterface $route_match) {
  if ($route_name == 'help.page.yse_cascades') {
    $text = file_get_contents(__DIR__ . '/README.md');
    if (!\Drupal::moduleHandler()->moduleExists('markdown')) {
      return '<pre>' . $text . '</pre>';
    }
    else {
      /** @var \Drupal\markdown\PluginManager\ParserManagerInterface $parser_manager */
      $parser_manager = \Drupal::service('plugin.manager.markdown.parser');
      $parser = $parser_manager->getDefaultParser([
        'render_strategy' => ['type' => 'none'],
      ]);
      return $parser->parse($text);
    }
  }
  return NULL;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function yse_cascades_form_node_yse_sbunit_page_edit_form_alter(&$form, Drupal\Core\Form\FormState $form_state, $form_id) {
  \Drupal::service('yse_cascades.nodeform_utils')->yse_sbunit_page_form_alter($form, $form_state, $form_id);
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function yse_cascades_form_node_yse_sbunit_page_form_alter(&$form, Drupal\Core\Form\FormState $form_state, $form_id) {
    \Drupal::service('yse_cascades.nodeform_utils')->yse_sbunit_page_form_alter($form, $form_state, $form_id);
}

/*
 * it appears that on ajax we miss something like   // \Drupal::formBuilder()->doBuildForm()
 * so we recreate much of that here.
 */

/**
 * Implements hook_theme_suggestions_form_element().
 */
function yse_cascades_theme_suggestions_form_element_alter(&$suggestions, $variables) {
  //operate only on menu-extra elements
  if (isset($variables['element']['#field_parents']) && count($variables['element']['#field_parents']) > 1 && $variables['element']['#field_parents'][0] == 'menu' &&  $variables['element']['#field_parents'][1] == 'extra'){
    $suggestions[] = $variables['theme_hook_original'] . '__menu_extra';
  }
}


function yse_cascades_theme_suggestions_input_alter(&$suggestions, $variables) {
  //operate only on menu-extra elements
  if (isset($variables['element']['#field_parents']) && count($variables['element']['#field_parents']) > 1 && $variables['element']['#field_parents'][0] == 'menu' &&  $variables['element']['#field_parents'][1] == 'extra'){
    $suggestions[] = 'field__' . $variables['element']['#type'] . '__menu_extra';
  }

}

function yse_cascades_theme_suggestions_select_alter(&$suggestions, $variables) {
  //operate only on menu-extra elements
  if (isset($variables['element']['#field_parents'])  && count($variables['element']['#field_parents']) > 1 && $variables['element']['#field_parents'][0] == 'menu' &&  $variables['element']['#field_parents'][1] == 'extra'){
    $suggestions[] = 'field__' . $variables['element']['#type'] . '__menu_extra';
  }
}

function yse_cascades_preprocess_field_multiple_value_form(&$variables) {
  if (isset($variables['element']['#field_parents'])  && count($variables['element']['#field_parents']) > 1 && $variables['element']['#field_parents'][0] == 'menu' &&  $variables['element']['#field_parents'][1] == 'extra'){


    $index        = $variables['element']['#max_delta'];
    $parentstring = str_replace('_', '-', implode('-', $variables['element']['#parents'])) ?? null;
    $desc = $variables['element'][0]['#description'] ?? null;
    $type = $variables['element'][0]['value']['#type'] ?? null;

    if (!isset($variables['third_party_settings'])){
      $variables['third_party_settings'] = [];
    }

    $variables['third_party_settings']['parentstring']  = $parentstring;
    $variables['third_party_settings']['fieldtype']     = $variables['element'][0]['value']['#type'] ?? null;

    if (isset($variables['element'][0]['#description'])){
      $description_attributes['id'] = 'edit-' . $parentstring . '-0-value';
      $variables['description']['attributes'] = new Attribute($description_attributes);
      $variables['description']['content'] = $variables['element'][0]['#description'];
    }

  }
}

function yse_cascades_preprocess_form_element(&$variables) {
  //operate only on menu-extra elements
  if (isset($variables['element']['#field_parents'])  && count($variables['element']['#field_parents']) > 1 && $variables['element']['#field_parents'][0] == 'menu' &&  $variables['element']['#field_parents'][1] == 'extra'){

    if (in_array($variables['element']['#type'], ['checkbox','textfield','select'], TRUE)) {
      if (empty($variables['element']['#name']) && !empty($variables['element']['#attributes']['id']) ){
        $variables['element']['#name'] = $variables['element']['#attributes']['id'];
      }
      if (isset($variables['element']['#field_prefix']) ){
        $variables['prefix'] = $variables['element']['#field_prefix'];
        $variables['attributes']['class'][] = 'field_prefix__label__menu_extra';
      }
    }

    //remove malformed classes
    if (isset($variables['attributes']['class'])){
      $variables['attributes']['class'] = array_values(array_filter($variables['attributes']['class'], fn ($m) => !in_array($m, ['js-form-item-','form-item-'])));
    }

    if (isset($variables['element']['#attributes']['id']) ){
      $variables['attributes']['class'][] = 'js-form-item-' . $variables['element']['#attributes']['id'];
      $variables['attributes']['class'][] = 'form-item-' . $variables['element']['#attributes']['id'];
    }

    if (!isset($variables['type']) && isset($variables['element']['#type'])){
      $variables['type'] = $variables['element']['#type'];
    }

    if (!isset($variables['name']) && isset($variables['element']['#name'])){
      $variables['name'] = $variables['element']['#name'];
    }

    $description_id = $variables['element']['#attributes']['id'] . '--description';
    $description_attributes['id'] = $description_id;
    $variables['description_display'] = $variables['element']['#description_display'];
    if ($variables['element']['#description_display'] === 'invisible') {
      $description_attributes['class'][] = 'visually-hidden';
    }
    $description_attributes['data-drupal-field-elements'] = 'description';
    $variables['description']['attributes'] = new Attribute($description_attributes);
    $variables['description']['content'] = $variables['element']['#description'];

    // Add the description's id to the fieldset aria attributes.
    $variables['attributes']['aria-describedby'] = $description_id;

  }
}

function yse_cascades_preprocess_form_element_label(&$variables) {
  //operate only on menu-extra elements
  if (isset($variables['element']['#id']) && (strpos($variables['element']['#id'], 'edit-menu-extra') === 0)){
    if (empty($variables['element']['#for']) && !empty($variables['element']['#id']) ){
      $variables['attributes']['for'] = $variables['element']['#id'];
    }
    if (isset($variables['element']['#for']) ){
      $variables['attributes']['for'] = $variables['element']['#for'];
    }
  }
}

function yse_cascades_preprocess_input(&$variables) {
  //operate only on menu-extra elements
  if (isset($variables['element']['#field_parents'])  && count($variables['element']['#field_parents']) > 1 && $variables['element']['#field_parents'][0] == 'menu' &&  $variables['element']['#field_parents'][1] == 'extra'){
    if (in_array($variables['element']['#type'], ['checkbox','textfield'], TRUE)) {
      $variables['attributes']['class'][] = 'input' . '__' . $variables['element']['#type'] . '__menu_extra';
    }
  }
}

function yse_cascades_preprocess_select(&$variables) {
  //operate only on menu-extra elements
  if (isset($variables['element']['#field_parents'])  && count($variables['element']['#field_parents']) > 1 && $variables['element']['#field_parents'][0] == 'menu' &&  $variables['element']['#field_parents'][1] == 'extra'){
      $variables['attributes']['class'][] = 'select__menu_extra';
  }
}

function yse_cascades_preprocess_textarea(&$variables) {
  //operate only on menu-extra elements
  if (isset($variables['element']['#field_parents'])  && count($variables['element']['#field_parents']) > 1 && $variables['element']['#field_parents'][0] == 'menu' &&  $variables['element']['#field_parents'][1] == 'extra'){
      $variables['attributes']['class'][] = 'textarea__menu_extra';
  }
}


function yse_cascades_preprocess_container(&$variables) {

  if (!isset($variables['element']['#attributes'])){
     $variables['element'] += ['#attributes' => []];
  }
  //operate only on menu-extra elements
  if (isset($variables['element']['#parents'])  && count($variables['element']['#parents']) > 1 && $variables['element']['#parents'][0] == 'menu' &&  $variables['element']['#parents'][1] == 'extra'){
    $variables['attributes']['class'][] = 'container__menu_extra';
    $variables['attributes']['class'][] = 'js-form-wrapper';
    $variables['attributes']['class'][] = 'form-wrapper';
    // Assign an html ID.
    if (!isset($variables['element']['#attributes']['id'])) {
      if (isset($variables['element']['#id'])){
        $variables['attributes']['id'] = $variables['element']['#id'];
        $variables['attributes']['data-drupal-selector'] = $variables['element']['#id'];
      }
      elseif (isset($variables['element']['#parents'])){
        $parentstr = 'edit-' . str_replace('_', '-', implode('-', $variables['element']['#parents']));
        $variables['attributes']['id'] = $variables['element']['#id'] = $parentstr;
        $variables['attributes']['data-drupal-selector'] = $parentstr;
      }
    }
    $variables['has_parent'] = TRUE;
  }

}
